// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String?  @unique
  name      String?
  number    String   @unique
  password  String
  createdAt DateTime @default(now())
}

model Client {
  id          Int           @id @default(autoincrement())
  email       String?       @unique
  name        String?
  number      String        @unique
  password    String
  kycok       Boolean?      @default(false)
  role        String?       @default("user")
  wallet      String?
  createdBy   Int           @default(1)
  isActive    Boolean?      @default(true)
  Employee    Employee[]
  createdAt   DateTime      @default(now())
  Transaction Transaction[]
}

model Employee {
  id        Int      @id @default(autoincrement())
  email     String?  @unique
  name      String?
  wallet    String?
  salary    Int
  createdAt DateTime @default(now())
  isActive  Boolean? @default(true)
  clientId  Int
  client    Client   @relation(fields: [clientId], references: [id])
}

model Transaction {
  id             Int       @id @default(autoincrement())
  senderWallet   String?
  receiverWallet String?
  amount         Int
  currency       String    @default("SOL")
  createdAt      DateTime  @default(now())
  paidOn         DateTime?
  clientId       Int
  client         Client    @relation(fields: [clientId], references: [id])
  isActive       Boolean?  @default(true)
}

model PaymentSchedule {
  id        Int      @id @default(autoincrement())
  sender    String?
  receiver  String?
  amount    String?
  currency  String?
  status    String?
  createdAt DateTime @default(now())
  isActive  Boolean? @default(true)
}

enum AuthType {
  Google
  Github
}
